#### This is for string "robot_status".
#### Before this, any field we need, the robot will set it.
#### For example, there is a field "need_reset" in the string.
#### We sure can derive this field from the status number.
####
#### Tire of changing robot code for adding new field,
#### a wrapper will be added to derive all those fields from
#### the status number.

package provide DCSRobotState 1.0  

package require DCSString

class DCS::RobotState {
	inherit DCS::String

	public method setContents
	public method configureString

    private method getOKForBeamlineTool { num } {
        set curPoint [lindex $_contents 2]
        set toolNum  [lindex $_contents 18]
        switch -exact -- $curPoint {
            P90 -
            P91 {
                if {$toolNum == "" || $toolNum == $num} {
                    ### TODO: remove empty case once all robot got new software
                    return 1
                }
            }
        }
        return 0
    }

    public method getOKForPinA { } {
        return [getOKForBeamlineTool 0]
    }

    public method getOKForPinB { } {
        return [getOKForBeamlineTool 1]
    }

	constructor { args } {
	    # call base class constructor
	    ::DCS::Component::constructor { \
		    contents { getContents } \
            OKForPinA  { getOKForPinA } \
            OKForPinB  { getOKForPinB } \
		 }
	} {
        ###following are the old fields generated by robotDHS
        createAttributeFromField sample 0
        createAttributeFromField magnet 1
        createAttributeFromField point 2
        createAttributeFromField ln2 3
        createAttributeFromField port 4
        createAttributeFromField perm_pin_mounted 5
        createAttributeFromField perm_pin_lost 6
        createAttributeFromField pin_mounted_before_lost 7
        createAttributeFromField sample_on 8
        createAttributeFromField perm_pin_stripped 9
        createAttributeFromField pin_stripped 10
        createAttributeFromField tong_port 11
        createAttributeFromField picker_port 12
        createAttributeFromField placer_port 13
        createAttributeFromField perm_puck_pin_mounted 14
        createAttributeFromField puck_pin_mounted 15
        createAttributeFromField perm_pin_moved 16
        createAttributeFromField perm_puck_pin_moved 17

		eval configure $args
		announceExist
	}
}
body DCS::RobotState::configureString { message_ } {
    #puts "RobotState: config $message_"

	configure -controller  [lindex $message_ 2] 
	set contents [lrange $message_ 3 end]

    setContents normal $contents
}

body DCS::RobotState::setContents { status_ contents_ } {
    #puts "RobotState setContents: $status_ $contents_"
    set lastResult $status_
    if {$lastResult == "normal"} {
        set _contents $contents_
	    #inform that new configuration is available
	    updateRegisteredComponents contents
	    updateRegisteredComponents OKForPinA
	    updateRegisteredComponents OKForPinB

	    updateRegisteredFieldListeners
    }

	recalcStatus
}
