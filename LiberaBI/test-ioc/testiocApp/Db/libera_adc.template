###############################################################################
#                              ADC raw
###############################################################################
# ADC raw monitor output is a matrix: [A B C D]
# A .. D            ADC samples
#

record(bi, "$(DEVICE)ADC_MONITOR") {
	field(SCAN, "Passive")
	#field(DTYP, "asynUInt32Digital")
	field(FLNK, "$(DEVICE)ADC_A_MONITOR PP")
	#field(INP, "@asynMask($(PORT), 400, 0x1, 1.0)")
}

record(waveform, "$(DEVICE)ADC_A_MONITOR") {
	field(DESC, "Data for ADC A")
	#field(DTYP, "asynInt32ArrayIn")
	#field(INP, "@asyn($(PORT), 400)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)ADC_B_MONITOR PP")
}

record(waveform, "$(DEVICE)ADC_B_MONITOR") {
	field(DESC, "Data for ADC B")
	#field(DTYP, "asynInt32ArrayIn")
	#field(INP, "@asyn($(PORT), 401)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)ADC_C_MONITOR PP")
}

record(waveform, "$(DEVICE)ADC_C_MONITOR") {
	field(DESC, "Data for ADC C")
	#field(DTYP, "asynInt32ArrayIn")
	#field(INP, "@asyn($(PORT), 402)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)ADC_D_MONITOR PP")
}

record(waveform, "$(DEVICE)ADC_D_MONITOR") {
	field(DESC, "Data for ADC D")
	#field(DTYP, "asynInt32ArrayIn")
	#field(INP, "@asyn($(PORT), 403)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)ADC_FINISHED_MONITOR PP")
}

record(calc, "$(DEVICE)ADC_FINISHED_MONITOR") {
	field(CALC, "A + 1")
	field(INPA, "$(DEVICE)ADC_FINISHED_MONITOR PP")
}

record(bo, "$(DEVICE)ADC_IGNORE_TRIG_SP") {
	#field(DTYP, "asynUInt32Digital")
	#field(OUT, "@asynMask($(PORT), 415, 0x1, 1.0)")
	field(ZNAM, "Trigger Allowed")
	field(ONAM, "Trigger Ignored")
	field(FLNK, "$(DEVICE)ADC_IGNORE_TRIG_MONITOR PP")
}

record(calc, "$(DEVICE)ADC_IGNORE_TRIG_MONITOR") {
	field(CALC, "A?1:0")
	field(INPA, "$(DEVICE)ADC_IGNORE_TRIG_SP PP")
}

record(bo, "$(DEVICE)ADC_ON_NEXT_TRIG_CMD") {
	#field(DTYP, "asynUInt32Digital")
	#field(OUT, "@asynMask($(PORT), 419, 0x1, 1.0)")
}

