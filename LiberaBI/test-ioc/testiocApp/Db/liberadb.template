###############################################################################
#                              ADC raw
###############################################################################
# ADC raw monitor output is a matrix: [A B C D]
# A .. D            ADC samples
#

record(bi, "$(DEVICE)ADC_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynUInt32Digital")
	field(FLNK, "$(DEVICE)ADC_A_MONITOR PP")
	field(INP, "@asynMask($(PORT), 400, 0x1, 1.0)")
}

record(waveform, "$(DEVICE)ADC_A_MONITOR") {
	field(DESC, "Data for ADC A")
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 400)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)ADC_B_MONITOR PP")
}

record(waveform, "$(DEVICE)ADC_B_MONITOR") {
	field(DESC, "Data for ADC B")
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 401)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)ADC_C_MONITOR PP")
}

record(waveform, "$(DEVICE)ADC_C_MONITOR") {
	field(DESC, "Data for ADC C")
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 402)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)ADC_D_MONITOR PP")
}

record(waveform, "$(DEVICE)ADC_D_MONITOR") {
	field(DESC, "Data for ADC D")
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 403)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)ADC_FINISHED_MONITOR PP")
}

record(calc, "$(DEVICE)ADC_FINISHED_MONITOR") {
	field(CALC, "A + 1")
	field(INPA, "$(DEVICE)ADC_FINISHED_MONITOR PP")
}

record(bo, "$(DEVICE)ADC_IGNORE_TRIG_SP") {
	field(DTYP, "asynUInt32Digital")
	field(OUT, "@asynMask($(PORT), 415, 0x1, 1.0)")
	field(ZNAM, "Trigger Allowed")
	field(ONAM, "Trigger Ignored")
	field(FLNK, "$(DEVICE)ADC_IGNORE_TRIG_MONITOR PP")
}

record(calc, "$(DEVICE)ADC_IGNORE_TRIG_MONITOR") {
	field(CALC, "A?1:0")
	field(INPA, "$(DEVICE)ADC_IGNORE_TRIG_SP PP")
}

record(bo, "$(DEVICE)ADC_ON_NEXT_TRIG_CMD") {
	field(DTYP, "asynUInt32Digital")
	field(OUT, "@asynMask($(PORT), 419, 0x1, 1.0)")
}
###############################################################################
#                       ADC continuous wave
###############################################################################
# ADC continuous wave monitor output is a matrix: [A B C D X Y SUM]
# A .. D            ADC samples
# X, Y, SUM         calculated values
#

record(bi, "$(DEVICE)ADCCW_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynUInt32Digital")
	field(FLNK, "$(DEVICE)ADCCW_A_MONITOR PP")
	field(INP, "@asynMask($(PORT), 440, 0x1, 1.0)")
}

record(waveform, "$(DEVICE)ADCCW_A_MONITOR") {
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 440)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)ADCCW_B_MONITOR PP")
}

record(waveform, "$(DEVICE)ADCCW_B_MONITOR") {
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 441)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)ADCCW_C_MONITOR PP")
}

record(waveform, "$(DEVICE)ADCCW_C_MONITOR") {
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 442)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)ADCCW_D_MONITOR PP")
}

record(waveform, "$(DEVICE)ADCCW_D_MONITOR") {
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 443)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)ADCCW_X_MONITOR PP")
}

record(waveform, "$(DEVICE)ADCCW_X_MONITOR") {
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 444)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)ADCCW_Y_MONITOR PP")
}

record(waveform, "$(DEVICE)ADCCW_Y_MONITOR") {
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 445)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)ADCCW_SUM_MONITOR PP")
}

record(waveform, "$(DEVICE)ADCCW_SUM_MONITOR") {
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 446)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)ADCCW_FINISHED_MONITOR PP")
}

record(calc, "$(DEVICE)ADCCW_FINISHED_MONITOR") {
	field(CALC, "A+1")
	field(INPA, "$(DEVICE)ADCCW_FINISHED_MONITOR PP")
}

record(bo, "$(DEVICE)ADCCW_IGNORE_TRIG_SP") {
	field(DTYP, "asynUInt32Digital")
	field(OUT, "@asynMask($(PORT), 447, 0x1, 1.0)")
	field(ZNAM, "Trigger Allowed")
	field(ONAM, "Trigger Ignored")
	field(FLNK, "$(DEVICE)ADCCW_IGNORE_TRIG_MONITOR PP")
}

record(calc, "$(DEVICE)ADCCW_IGNORE_TRIG_MONITOR") {
	field(CALC, "A?1:0")
	field(INPA, "$(DEVICE)ADCCW_IGNORE_TRIG_SP PP")
}

record(bo, "$(DEVICE)ADCCW_ON_NEXT_TRIG_CMD") {
	field(DTYP, "asynUInt32Digital")
	field(OUT, "@asynMask($(PORT), 448, 0x1, 1.0)")
}
###############################################################################
#                                  DD
###############################################################################
# DD monitor output is a matrix: [Va Vb Vc Vd X Y Q SUM]
# Va .. Vd            amplitudes
# X, Y, Q, SUM        calculated positions and factors
#

record(bi, "$(DEVICE)DD_MONITOR") {
	field(DTYP, "asynUInt32Digital")
	field(INP, "@asynMask($(PORT), 100, 0x1, 1.0)")
	field(SCAN, "I/O Intr")
	field(FLNK, "$(DEVICE)DD_$(WF1)_MONITOR PP")
}

record(waveform, "$(DEVICE)DD_$(WF1)_MONITOR") {
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 100)")
	field(DESC, "Data for $(WF1)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)DD_$(WF2)_MONITOR PP")
}

record(waveform, "$(DEVICE)DD_$(WF2)_MONITOR") {
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 101)")
	field(DESC, "Data for $(WF2)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)DD_$(WF3)_MONITOR PP")
}

record(waveform, "$(DEVICE)DD_$(WF3)_MONITOR") {
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 102)")
	field(DESC, "Data for $(WF3)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)DD_$(WF4)_MONITOR PP")
}

record(waveform, "$(DEVICE)DD_$(WF4)_MONITOR") {
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 103)")
	field(DESC, "Data for $(WF4)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)DD_$(WF5)_MONITOR PP")
}

record(waveform, "$(DEVICE)DD_$(WF5)_MONITOR") {
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 104)")
	field(DESC, "Data for $(WF5)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)DD_$(WF6)_MONITOR PP")
}

record(waveform, "$(DEVICE)DD_$(WF6)_MONITOR") {
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 105)")
	field(DESC, "Data for $(WF6)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)DD_$(WF7)_MONITOR PP")
}

record(waveform, "$(DEVICE)DD_$(WF7)_MONITOR") {
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 106)")
	field(DESC, "Data for $(WF7)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)DD_$(WF8)_MONITOR PP")
}

record(waveform, "$(DEVICE)DD_$(WF8)_MONITOR") {
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 107)")
	field(DESC, "Data for $(WF8)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)DD_FINISHED_MONITOR PP")
}

record(calc, "$(DEVICE)DD_FINISHED_MONITOR") {
	field(CALC, "A+1")
	field(INPA, "$(DEVICE)DD_FINISHED_MONITOR PP")
}

record(stringin, "$(DEVICE)DD_MT_MONITOR") {
	field(DTYP, "asynOctetRead")
	field(INP, "@asyn($(PORT), 108)")
	field(SCAN, "I/O Intr")
	field(DESC, "DD machine time")
}

record(stringin, "$(DEVICE)DD_ST_MONITOR") {
	field(DTYP, "asynOctetRead")
	field(INP, "@asyn($(PORT), 109)")
	field(DESC, "DD system time")
	field(SCAN, "I/O Intr")
}

record(bo, "$(DEVICE)DD_REQUEST_CMD") {
	field(DTYP, "asynUInt32Digital")
	field(OUT, "@asynMask($(PORT), 113, 0x1, 1.0)")
	field(DESC, "DD request data")
	field(ZNAM, "Request DD data")
	field(ONAM, "Request DD data")
}

record(bo, "$(DEVICE)DD_IGNORE_TRIG_SP") {
	field(DTYP, "asynUInt32Digital")
	field(OUT, "@asynMask($(PORT), 115, 0x01, 1.0)")
	field(DESC, "DD request data")
	field(ZNAM, "Trigger Allowed")
	field(ONAM, "Trigger Ignored")
	field(FLNK, "$(DEVICE)DD_IGNORE_TRIG_MONITOR PP")
}

record(calc, "$(DEVICE)DD_IGNORE_TRIG_MONITOR") {
	field(CALC, "A?1:0")
	field(INPA, "$(DEVICE)DD_IGNORE_TRIG_SP PP")
}

record(mbbo, "$(DEVICE)DD_SEEK_POINT_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 116)")
	field(ZRVL, "0")
	field(ONVL, "1")
	field(TWVL, "2")
	field(ZRST, "Trigger")
	field(ONST, "MT")
	field(TWST, "ST")
}

record(stringout, "$(DEVICE)DD_MT_OFFSET_SP") {
	field(DTYP, "asynOctetWrite")
	field(OUT, "@asyn($(PORT), 117)")
}

record(stringout, "$(DEVICE)DD_ST_OFFSET_SP") {
	field(DTYP, "asynOctetWrite")
	field(OUT, "@asyn($(PORT), 118)")
}

record(bo, "$(DEVICE)DD_ON_NEXT_TRIG_CMD") {
	field(DTYP, "asynUInt32Digital")
	field(OUT, "@asynMask($(PORT), 119, 0x1, 1.0)")
	field(ZNAM, "Acquire many")
	field(ONAM, "Acquire once")
}
###############################################################################
#                        General environment PVs
###############################################################################
# ENV monitor output is a single value.
#

record(longin, "$(DEVICE)ENV_K1_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 700)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_K1_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 700)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_K2_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 701)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_K2_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 701)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_OFFSET1_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 702)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_OFFSET1_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 702)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_OFFSET2_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 703)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_OFFSET2_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 703)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_ILK_X_LOW_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 705)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_ILK_X_LOW_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 705)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_ILK_X_HIGH_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 706)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_ILK_X_HIGH_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 706)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_ILK_Y_LOW_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 707)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_ILK_Y_LOW_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 707)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_ILK_Y_HIGH_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 708)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_ILK_Y_HIGH_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 708)")
	field(PINI, "YES")
}

record(mbbiDirect, "$(DEVICE)ENV_ERROR_MONITOR") {
	field(DTYP, "asynUInt32Digital")
	field(SCAN, "I/O Intr")
	field(INP, "@asynMask($(PORT), 711, 0x7, 1.0)")
	field(FLNK, "$(DEVICE)ENV_DDFPGA_ERR_MONITOR")
	field(NOBT, "3")
	field(PINI, "YES")
}

record(stringout, "$(DEVICE)ENV_SETMT_SP") {
	field(DTYP, "asynOctetWrite")
	field(OUT, "@asyn($(PORT), 712)")
}

record(stringout, "$(DEVICE)ENV_SETST_SP") {
	field(DTYP, "asynOctetWrite")
	field(OUT, "@asyn($(PORT), 713)")
}

record(bo, "$(DEVICE)ENV_COMMIT_MT_CMD") {
	field(DTYP, "asynUInt32Digital")
	field(OUT, "@asynMask($(PORT), 714, 0x1, 1.0)")
}

record(bo, "$(DEVICE)ENV_COMMIT_ST_CMD") {
	field(DTYP, "asynUInt32Digital")
	field(OUT, "@asynMask($(PORT), 715, 0x1, 1.0)")
}

record(bo, "$(DEVICE)ENV_COMMIT_MTST_CMD") {
	field(DTYP, "asynUInt32Digital")
	field(OUT, "@asynMask($(PORT), 716, 0x1, 1.0)")
}

record(ai, "$(DEVICE)ENV_FRONT_VENT_CONF_MONITOR") {
	field(SCAN, "10 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 717)")
	field(PINI, "YES")
}

record(ai, "$(DEVICE)ENV_FRONT_VENT_ACT_MONITOR") {
	field(SCAN, "10 second")
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT), 718)")
	field(DESC, "Front")
	field(EGU,  "RPM")
	field(LOW,  "2000")
	field(HIGH, "4500")
	field(HSV,  "MAJOR")
	field(PINI, "YES")
}

record(ai, "$(DEVICE)ENV_BACK_VENT_CONF_MONITOR") {
	field(SCAN, "10 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 719)")
	field(PINI, "YES")
}

record(ai, "$(DEVICE)ENV_BACK_VENT_ACT_MONITOR") {
	field(SCAN, "10 second")
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT), 720)")
	field(DESC, "Back")
	field(EGU,  "RPM")
	field(LOW,  "2000")
	field(HIGH, "4500")
	field(HSV,  "MAJOR")
	field(PINI, "YES")
}

record(ai, "$(DEVICE)ENV_TEMP_MAX_MONITOR") {
	field(SCAN, "10 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 721)")
	field(PINI, "YES")
}

record(ai, "$(DEVICE)ENV_TEMP_MIN_MONITOR") {
	field(SCAN, "10 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 722)")
	field(PINI, "YES")
}

record(ai, "$(DEVICE)ENV_TEMP_MONITOR") {
	field(SCAN, "10 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 723)")
	field(DESC, "Digital PCB")
	field(EGU,  "C")
	field(LOW,  "0")
	field(HIGH, "60")
	field(HSV,  "MAJOR")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_RANGE_MONITOR") {
	field(SCAN, "1 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 724)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_RANGE_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 724)")
	field(PINI, "YES")
}

record(mbbi, "$(DEVICE)ENV_ARC_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 725, 1.0)")
	field(ZRVL, "0")
	field(ONVL, "1")
	field(ZRST, "MANUAL")
	field(ONST, "AUTO")
	field(PINI, "YES")
}

record(mbbo, "$(DEVICE)ENV_ARC_SP") {
	field(ZRVL, "0")
	field(ONVL, "1")
	field(ZRST, "MANUAL")
	field(ONST, "AUTO")
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 725)")
	field(PINI, "YES")
}

record(mbbo, "$(DEVICE)ENV_CALIB_SP")
{
    field(OUT, "$(DEVICE)ENV_CALIB_WRITE PP")
	field(ZRVL, "0")
	field(ONVL, "1")
	field(TWVL, "2")
	field(THVL, "3")
	field(FRVL, "4")
	field(FVVL, "5")
	field(ZRST, "OFF")
	field(ONST, "UNITY")
	field(TWST, "AUTO")
	field(THST, "SAVE")
	field(FRST, "MANUAL_RANGE")
	field(FVST, "MANUAL_ALL")
    field(PINI, "YES")
}

record(mbbo, "$(DEVICE)ENV_CALIB_WRITE")
{
    field(SDIS, "$(DEVICE)ENV_CALIB_SYNC.PACT")
    field(DISV, "1")
    field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 726)")
}

record(mbbi, "$(DEVICE)ENV_CALIB_MONITOR")
{
    field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 726, 1.0)")
    field(SCAN, "I/O Intr")
    field(FLNK, "$(DEVICE)ENV_CALIB_SYNC")
	field(ZRVL, "0")
	field(ONVL, "1")
	field(TWVL, "2")
	field(THVL, "3")
	field(FRVL, "4")
	field(FVVL, "5")
	field(ZRST, "OFF")
	field(ONST, "UNITY")
	field(TWST, "AUTO")
	field(THST, "SAVE")
	field(FRST, "MANUAL_RANGE")
	field(FVST, "MANUAL_ALL")
}

record(mbbo, "$(DEVICE)ENV_CALIB_SYNC")
{
    field(DOL,  "$(DEVICE)ENV_CALIB_MONITOR NPP")
    field(OMSL, "closed_loop")
    field(OUT,  "$(DEVICE)ENV_CALIB_SP PP")
}

record(mbbi, "$(DEVICE)ENV_ILK_MODE_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ONVL, "1")
	field(TWVL, "3")
	field(ZRST, "DISABLE")
	field(ONST, "ENABLE")
	field(TWST, "ENABLE_BIAS_OC")
	field(INP, "@asyn($(PORT), 727)")
	field(PINI, "YES")
}

record(mbbo, "$(DEVICE)ENV_ILK_MODE_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 727)")
	field(ZRVL, "0")
	field(ONVL, "1")
	field(TWVL, "3")
	field(ZRST, "DISABLE")
	field(ONST, "ENABLE")
	field(TWST, "ENABLE_BIAS_OC")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_ILK_OF_LIMIT_LOW_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 728)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_ILK_OF_LIMIT_LOW_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 728)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_ILK_OF_DUR_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 729)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_ILK_OF_DUR_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 729)")
	field(PINI, "YES")
}

record(bi, "$(DEVICE)ENV_INTERLOCK_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynUInt32Digital")
	field(INP, "@asynMask($(PORT), 731, 0x1, 1.0)")
	field(ZNAM, "NO INTERLOCK")
	field(ONAM, "INTERLOCK")
	field(PINI, "YES")
}

record(bo, "$(DEVICE)ENV_INTERLOCK_CLEAR_CMD") {
	field(DTYP, "asynUInt32Digital")
	field(OUT, "@asynMask($(PORT), 732, 0x1, 1.0)")
}

record(bo, "$(DEVICE)ENV_SET_INTERLOCK_PARAM_CMD") {
	field(DESC, "Sets ILK parameters")
	field(DTYP, "asynUInt32Digital")
	field(OUT, "@asynMask($(PORT), 733, 0x1, 1.0)")
}

record(stringout, "$(DEVICE)ENV_SETMTPHASE_SP") {
	field(DTYP, "asynOctetWrite")
	field(OUT, "@asyn($(PORT), 734)")
}

record(longin, "$(DEVICE)ENV_ILK_STATUS_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 735)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_ILK_STATUS_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 735)")
	#field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_PMOFFSET_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 738)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_PMOFFSET_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 738)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_TRIGDELAY_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 739)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_TRIGDELAY_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 739)")
	field(PINI, "YES")
}

#! PLL configuration parameters

record(longin, "$(DEVICE)ENV_PLL_OFFSETTUNE_MONITOR") {
	field(SCAN, "5 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 742)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_PLL_OFFSETTUNE_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 742)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_PLL_PHASEOFFS_MONITOR") {
	field(SCAN, "5 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 744)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_PLL_PHASEOFFS_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 744)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_PLL_MTUNLOCK_MONITOR") {
	field(SCAN, "5 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 745)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_PLL_MTUNLOCK_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 745)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_PLL_SYNCIN_MONITOR") {
	field(SCAN, "5 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 746)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_PLL_SYNCIN_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 746)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_PLL_STUNLOCK_MONITOR") {
	field(SCAN, "5 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 747)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_PLL_STUNLOCK_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 747)")
	field(PINI, "YES")
}



record(mbbi, "$(DEVICE)ENV_MC_PLL_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 750, 1.0)")
	field(ZRVL, "0")
	field(ONVL, "1")
	field(ZRST, "UNLOCKED")
	field(ONST, "LOCKED")
	field(PINI, "YES")
}

record(mbbi, "$(DEVICE)ENV_SC_PLL_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 751, 1.0)")
	field(ZRVL, "0")
	field(ONVL, "1")
	field(ZRST, "UNLOCKED")
	field(ONST, "LOCKED")
	field(PINI, "YES")
}

record(ai, "$(DEVICE)ENV_VOLTAGE0_MONITOR") {
	field(SCAN, "10 second")
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT), 760)")
	field(DESC, "1.5 V")
	field(EGU,  "V")
	field(ASLO, "0.001")
	field(PREC, "3")
	field(LOW,  "1.425")
	field(HIGH, "1.575")
	field(HSV,  "MAJOR")
	field(PINI, "YES")
}

record(ai, "$(DEVICE)ENV_VOLTAGE1_MONITOR") {
	field(SCAN, "10 second")
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT), 761)")
	field(DESC, "1.8 V")
	field(EGU,  "V")
	field(ASLO, "0.001")
	field(PREC, "3")
	field(LOW,  "1.710")
	field(HIGH, "1.890")
	field(HSV,  "MAJOR")
	field(PINI, "YES")
}

record(ai, "$(DEVICE)ENV_VOLTAGE2_MONITOR") {
	field(SCAN, "10 second")
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT), 762)")
	field(DESC, "2.5 V")
	field(EGU,  "V")
	field(ASLO, "0.001")
	field(PREC, "3")
	field(LOW,  "2.375")
	field(HIGH, "2.625")
	field(HSV,  "MAJOR")
	field(PINI, "YES")
}

record(ai, "$(DEVICE)ENV_VOLTAGE3_MONITOR") {
	field(SCAN, "10 second")
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT), 763)")
	field(DESC, "3.3 V")
	field(EGU,  "V")
	field(ASLO, "0.001")
	field(PREC, "3")
	field(LOW,  "3.135")
	field(HIGH, "3.465")
	field(HSV,  "MAJOR")
	field(PINI, "YES")
}

record(ai, "$(DEVICE)ENV_VOLTAGE4_MONITOR") {
	field(SCAN, "10 second")
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT), 764)")
	field(DESC, "5.0 V")
	field(EGU,  "V")
	field(ASLO, "0.001")
	field(PREC, "3")
	field(LOW,  "4.750")
	field(HIGH, "5.250")
	field(HSV,  "MAJOR")
	field(PINI, "YES")
}

record(ai, "$(DEVICE)ENV_VOLTAGE5_MONITOR") {
	field(SCAN, "10 second")
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT), 765)")
	field(DESC, "12.0 V")
	field(EGU,  "V")
	field(ASLO, "0.001")
	field(PREC, "3")
	field(LOW,  "11.400")
	field(HIGH, "12.600")
	field(HSV,  "MAJOR")
	field(PINI, "YES")
}

record(ai, "$(DEVICE)ENV_VOLTAGE6_MONITOR") {
	field(SCAN, "10 second")
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT), 766)")
	field(DESC, "-12.0 V")
	field(EGU,  "V")
	field(ASLO, "0.001")
	field(PREC, "3")
	field(LOW,  "-12.600")
	field(HIGH, "-11.400")
	field(HSV,  "MAJOR")
	field(PINI, "YES")
}

record(ai, "$(DEVICE)ENV_VOLTAGE7_MONITOR") {
	field(SCAN, "10 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 767)")
	field(DESC, "-5.0 V")
	field(EGU,  "V")
	field(ASLO, "0.001")
	field(PREC, "3")
	field(LOW,  "-5.250")
	field(HIGH, "-4.750")
	field(HSV,  "MAJOR")
	field(PINI, "YES")
}

record(bi, "$(DEVICE)ENV_SAFPGA_ERR_MONITOR") {
	field(FLNK, "$(DEVICE)ENV_SADRV_ERR_MONITOR")
	field(INP, "$(DEVICE)ENV_ERROR_MONITOR.B1")
	field(OSV, "MAJOR")
	field(ZNAM, "NO ERROR")
	field(ONAM, "ERROR")
}

record(bi, "$(DEVICE)ENV_DDFPGA_ERR_MONITOR") {
	field(FLNK, "$(DEVICE)ENV_SAFPGA_ERR_MONITOR")
	field(INP, "$(DEVICE)ENV_ERROR_MONITOR.B0")
	field(OSV, "MAJOR")
	field(ZNAM, "NO ERROR")
	field(ONAM, "ERROR")
	field(PINI, "YES")
}

record(bi, "$(DEVICE)ENV_SADRV_ERR_MONITOR") {
	field(INP, "$(DEVICE)ENV_ERROR_MONITOR.B2")
	field(OSV, "MAJOR")
	field(ZNAM, "NO ERROR")
	field(ONAM, "ERROR")
}

record(longin, "$(DEVICE)ENV_PLL_REPSEQN_MONITOR") {
	field(SCAN, "5 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 768)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_PLL_MTSEQN_MONITOR") {
	field(SCAN, "5 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 769)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_PLL_MTDAC_MONITOR") {
	field(SCAN, "5 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 770)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_PLL_MTPHASEERR_MONITOR") {
	field(SCAN, "5 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 771)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_PLL_MTFREQ_MONITOR") {
	field(SCAN, "5 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 772)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_PLL_MTLCKST_MONITOR") {
	field(SCAN, "5 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 773)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_PLL_MTSTATUS_MONITOR") {
	field(SCAN, "5 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 774)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_PLL_STSEQN_MONITOR") {
	field(SCAN, "5 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 775)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_PLL_STDAC_MONITOR") {
	field(SCAN, "5 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 776)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_PLL_STPHASEERR_MONITOR") {
	field(SCAN, "5 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 777)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_PLL_STFREQ_MONITOR") {
	field(SCAN, "5 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 778)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_PLL_STLCKST_MONITOR") {
	field(SCAN, "5 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 779)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_PLL_STSTATUS_MONITOR") {
	field(SCAN, "5 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 780)")
	field(PINI, "YES")
}

###############################################################################
#                             MAX ADC
###############################################################################

record(longin, "$(DEVICE)ENV_MAX_ADC_MONITOR") {
	field(SCAN, "1 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 796)")
	field(PINI, "YES")
}

###############################################################################
#                       Post Mortem triggering
###############################################################################

record(mbbi, "$(DEVICE)ENV_PM_MODE_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(ZRVL, "0")
	field(ONVL, "1")
	field(TWVL, "2")
	field(ZRST, "EXTERNAL")
	field(ONST, "INTERNAL")
	field(TWST, "POSITION")
	field(INP, "@asyn($(PORT), 797)")
	field(PINI, "YES")
}

record(mbbo, "$(DEVICE)ENV_PM_MODE_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 797)")
	field(ZRVL, "0")
	field(ONVL, "1")
	field(TWVL, "2")
	field(ZRST, "EXTERNAL")
	field(ONST, "INTERNAL")
	field(TWST, "POSITION")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_PM_X_LOW_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 798)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_PM_X_LOW_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 798)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_PM_X_HIGH_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 799)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_PM_X_HIGH_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 799)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_PM_Y_LOW_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 800)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_PM_Y_LOW_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 800)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_PM_Y_HIGH_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 801)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_PM_Y_HIGH_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 801)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_PM_OF_LIMIT_LOW_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 802)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_PM_OF_LIMIT_LOW_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 802)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_PM_OF_DUR_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 803)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_PM_OF_DUR_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 803)")
	field(PINI, "YES")
}

record(bo, "$(DEVICE)ENV_SET_POSTMORTEM_PARAM_CMD") {
	field(DESC, "Sets PM parameters")
	field(DTYP, "asynUInt32Digital")
	field(OUT, "@asynMask($(PORT), 804, 0x1, 1.0)")
}


###############################################################################
#                       Post Mortem decimation
###############################################################################

record(mbbi, "$(DEVICE)ENV_PMDEC_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 805)")
	field(ZRVL, "1")
	field(ONVL, "64")
	field(ZRST, "1")
	field(ONST, "64")
	field(PINI, "YES")
}

record(mbbo, "$(DEVICE)ENV_PMDEC_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 805)")
	field(ZRVL, "1")
	field(ONVL, "64")
	field(ZRST, "1")
	field(ONST, "64")
	#field(PINI, "YES")
}

###############################################################################
#                       PBPP stuff
###############################################################################

record(longin, "$(DEVICE)ENV_ILK_OF_LIMIT_HIGH_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 810)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_ILK_OF_LIMIT_HIGH_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 810)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_PM_OF_LIMIT_HIGH_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 811)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_PM_OF_LIMIT_HIGH_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 811)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_POSALG_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 812)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_POSALG_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 812)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_IDGAP_SP")
{
	field(OUT, "$(DEVICE)ENV_IDGAP_WRITE PP")
	#field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_IDGAP_WRITE")
{
	field(SDIS, "$(DEVICE)ENV_IDGAP_SYNC.PACT")
	field(DISV, "1")
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 813)")
}

record(longin, "$(DEVICE)ENV_IDGAP_MONITOR")
{
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 813, 1.0)")
	field(SCAN, "I/O Intr")
	field(FLNK, "$(DEVICE)ENV_IDGAP_SYNC")
}

record(longout, "$(DEVICE)ENV_IDGAP_SYNC")
{
	field(DOL,  "$(DEVICE)ENV_IDGAP_MONITOR NPP")
	field(OMSL, "closed_loop")
	field(OUT,  "$(DEVICE)ENV_IDGAP_SP PP")
}

record(longin, "$(DEVICE)ENV_BIAS_INT_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 814)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_BIAS_INT_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 814)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_BIAS_CL_MONITOR") {
	field(SCAN, "5 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 815)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_BIAS_CL_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 815)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_KI_0_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 816)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_KI_0_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 816)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_KI_1_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 817)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_KI_1_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 817)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_KI_2_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 818)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_KI_2_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 818)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_KI_3_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 819)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_KI_3_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 819)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_IOFFSET_0_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 820)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_IOFFSET_0_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 820)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_IOFFSET_1_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 821)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_IOFFSET_1_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 821)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_IOFFSET_2_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 822)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_IOFFSET_2_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 822)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_IOFFSET_3_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 823)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_IOFFSET_3_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 823)")
	field(PINI, "YES")
}

record(ai, "$(DEVICE)ENV_TEMP_INNER_MONITOR") {
	field(SCAN, "10 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 824)")
	field(DESC, "Inner shield")
	field(EGU,  "C")
	field(LOW,  "0")
	field(HIGH, "60")
	field(ASLO, "0.001")
	field(PREC, "0")
	field(HSV,  "MAJOR")
	field(PINI, "YES")
}

record(ai, "$(DEVICE)ENV_TEMP_OUTER_MONITOR") {
	field(SCAN, "10 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 825)")
	field(DESC, "Outer shield")
	field(EGU,  "C")
	field(LOW,  "0")
	field(HIGH, "60")
	field(ASLO, "0.001")
	field(PREC, "0")
	field(HSV,  "MAJOR")
	field(PINI, "YES")
}

record(ai, "$(DEVICE)ENV_PBPP_1V25_MONITOR") {
	field(SCAN, "10 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 830)")
	field(DESC, "1.25 V")
	field(EGU,  "V")
	field(ASLO, "0.001")
	field(PREC, "3")
	field(LOW,  "1.187")
	field(HIGH, "1.313")
	field(HSV,  "MAJOR")
	field(PINI, "YES")
}

record(ai, "$(DEVICE)ENV_PBPP_2V5_NEG_MONITOR") {
	field(SCAN, "10 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 831)")
	field(DESC, "2.5 V (neg)")
	field(EGU,  "V")
	field(ASLO, "0.001")
	field(PREC, "3")
	field(LOW,  "2.375")
	field(HIGH, "2.625")
	field(HSV,  "MAJOR")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_BIAS_CURRENT_MONITOR") {
	field(SCAN, "1 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 832)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_BIAS_VOLTAGE_MONITOR") {
	field(SCAN, "1 second")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 833)")
	field(PINI, "YES")
}

record(mbbi, "$(DEVICE)ENV_OPMODE_MONITOR") {
    field(SCAN, "I/O Intr")
    field(DTYP, "asynInt32")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(ZRST, "IDLE")
    field(ONST, "GND")
    field(TWST, "INTBIAS")
    field(INP, "@asyn($(PORT), 834)")
    field(PINI, "YES")
}

record(mbbo, "$(DEVICE)ENV_OPMODE_SP") {
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PORT), 834)")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(ZRST, "IDLE")
    field(ONST, "GND")
    field(TWST, "INTBIAS")
    field(PINI, "YES")
}


record(longin, "$(DEVICE)ENV_LEAKAGE_0_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 835)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_LEAKAGE_0_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 835)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_LEAKAGE_1_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 836)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_LEAKAGE_1_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 836)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_LEAKAGE_2_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 837)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_LEAKAGE_2_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 837)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_LEAKAGE_3_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 838)")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_LEAKAGE_3_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 838)")
	field(PINI, "YES")
}

record(longin, "$(DEVICE)ENV_ILK_UNDERFLOW_MONITOR") {
	field(SCAN, "I/O Intr")
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT), 839)")
	field(EGU,  "pA")
	field(PINI, "YES")
}

record(longout, "$(DEVICE)ENV_ILK_UNDERFLOW_SP") {
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT), 839)")
	field(EGU,  "pA")
	field(PINI, "YES")
}
###############################################################################
#                        FA - fast acquisition
###############################################################################
# For FA acquisition FPGA memory read/write access is provided. SBC does not
# see FA data, only defines parameters for FA stream.

record(waveform, "$(DEVICE)FA_MEM_MONITOR") {
	field(DESC, "FA Memory")
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 500)")
	field(NELM, "8192")
	field(FTVL, "ULONG")
}

record(waveform, "$(DEVICE)FA_MEM_SP") {
	field(DESC, "FA memory writer")
	field(DTYP, "asynInt32ArrayOut")
	field(INP, "@asyn($(PORT), 501)")
	field(NELM, "8192")
	field(FTVL, "ULONG")
}

record(longout, "$(DEVICE)FA_OFFSET_SP") {
	field(DESC, "FA memory writer offset")
	field(PINI, "NO")
	field(DTYP, "asynInt32")
	field(VAL, "0")
	field(OUT, "@asyn($(PORT), 502)")
	field(DRVH, "8192")
	field(DRVL, "0")
	field(HOPR, "8192")
	field(LOPR, "0")
}

record(longout, "$(DEVICE)FA_LENGTH_SP") {
	field(DESC, "FA memory writer length")
	field(PINI, "NO")
	field(DTYP, "asynInt32")
	field(VAL, "8192")
	field(OUT, "@asyn($(PORT), 503)")
	field(DRVH, "8192")
	field(DRVL, "0")
	field(HOPR, "8192")
	field(LOPR, "0")
}

record(bo, "$(DEVICE)FA_MEM_READ_CMD") {
	field(FLNK, "$(DEVICE)FA_MEM_MONITOR PP")
	field(ZNAM, "Read Data")
	field(ONAM, "Read Data")
}

record(bo, "$(DEVICE)FA_MEM_WRITE_CMD") {
	field(FLNK, "$(DEVICE)FA_MEM_SP PP")
	field(ZNAM, "Write Data")
	field(ONAM, "Write Data")
}
###############################################################################
#                    PM - post mortem acquisition
###############################################################################
# PM monitor output is a matrix: [Va Vb Vc Vd X Y Q SUM]
# Va .. Vd            amplitudes
# X, Y, Q, SUM        calculated positions and factors
#

record(bi, "$(DEVICE)PM_MONITOR") {
	field(DTYP, "asynUInt32Digital")
	field(INP, "@asynMask($(PORT), 300, 0x1, 1.0)")
	field(SCAN, "I/O Intr")
	field(FLNK, "$(DEVICE)PM_$(WF1)_MONITOR PP")
}

record(waveform, "$(DEVICE)PM_$(WF1)_MONITOR") {
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 300)")
	field(DESC, "Data for $(WF1)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)PM_$(WF2)_MONITOR PP")
}

record(waveform, "$(DEVICE)PM_$(WF2)_MONITOR") {
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 301)")
	field(DESC, "Data for $(WF2)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)PM_$(WF3)_MONITOR PP")
}

record(waveform, "$(DEVICE)PM_$(WF3)_MONITOR") {
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 302)")
	field(DESC, "Data for $(WF3)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)PM_$(WF4)_MONITOR PP")
}

record(waveform, "$(DEVICE)PM_$(WF4)_MONITOR") {
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 303)")
	field(DESC, "Data for $(WF4)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)PM_$(WF5)_MONITOR PP")
}

record(waveform, "$(DEVICE)PM_$(WF5)_MONITOR") {
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 304)")
	field(DESC, "Data for $(WF5)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)PM_$(WF6)_MONITOR PP")
}

record(waveform, "$(DEVICE)PM_$(WF6)_MONITOR") {
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 305)")
	field(DESC, "Data for $(WF6)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)PM_$(WF7)_MONITOR PP")
}

record(waveform, "$(DEVICE)PM_$(WF7)_MONITOR") {
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 306)")
	field(DESC, "Data for $(WF7)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)PM_$(WF8)_MONITOR PP")
}

record(waveform, "$(DEVICE)PM_$(WF8)_MONITOR") {
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 307)")
	field(DESC, "Data for $(WF8)")
	field(NELM, "$(NELM)")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)PM_FINISHED_MONITOR PP")
}

record(calc, "$(DEVICE)PM_FINISHED_MONITOR") {
	field(CALC, "A+1")
	field(INPA, "$(DEVICE)PM_FINISHED_MONITOR PP")
}

record(stringin, "$(DEVICE)PM_MT_MONITOR") {
	field(DTYP, "asynOctetRead")
	field(INP, "@asyn($(PORT), 308)")
	field(SCAN, "I/O Intr")
}

record(stringin, "$(DEVICE)PM_ST_MONITOR") {
	field(DTYP, "asynOctetRead")
	field(INP, "@asyn($(PORT), 309)")
	field(SCAN, "I/O Intr")
}

record(bo, "$(DEVICE)PM_REQUEST_CMD") {
	field(DTYP, "asynUInt32Digital")
	field(OUT, "@asynMask($(PORT), 313, 0x1, 1.0)")
	field(DESC, "PM request data")
	field(ZNAM, "Request PM data")
	field(ONAM, "Request PM data")
}

record(bo, "$(DEVICE)PM_IGNORE_TRIG_SP") {
	field(DTYP, "asynUInt32Digital")
	field(OUT, "@asynMask($(PORT), 315, 0x1, 1.0)")
	field(DESC, "PM request data")
	field(ZNAM, "Trigger Allowed")
	field(ONAM, "Trigger Ignored")
	field(FLNK, "$(DEVICE)PM_IGNORE_TRIG_MONITOR PP")
}

record(calc, "$(DEVICE)PM_IGNORE_TRIG_MONITOR") {
	field(CALC, "A?1:0")
	field(INPA, "$(DEVICE)PM_IGNORE_TRIG_SP PP")
}

record(bo, "$(DEVICE)PM_ON_NEXT_TRIG_CMD") {
	field(DTYP, "asynUInt32Digital")
	field(OUT, "@asynMask($(PORT), 319, 0x1, 1.0)")
	field(DESC, "PM request data")
	field(ZNAM, "Acquire many")
	field(ONAM, "Acquire once")
}
###############################################################################
#                        SA - slow acquisition
###############################################################################
# SA monitor output is a matrix: [Va Vb Vc Vd X Y Q SUM CX CY]
# Va .. Vd            amplitudes
# X, Y, Q, SUM        calculated positions and factors
# CX, CY              x and y position correction coefficients 
#

record(bi, "$(DEVICE)SA_MONITOR") {
	field(DTYP, "asynUInt32Digital")
	field(INP, "@asynMask($(PORT), 200, 0x1, 1.0)")
	field(SCAN, "I/O Intr")
	field(FLNK, "$(DEVICE)SA_ARRAY_MONITOR PP")
}

record(waveform, "$(DEVICE)SA_ARRAY_MONITOR") {
	field(DTYP, "asynInt32ArrayIn")
	field(INP, "@asyn($(PORT), 200)")
	field(DESC, "A B C D X Y Q S CX CY")
	field(NELM, "16")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)SA_A_MONITOR PP")
}

record(subArray, "$(DEVICE)SA_A_MONITOR") {
	field(INP, "$(DEVICE)SA_ARRAY_MONITOR")
	field(INDX, "0")
	field(MALM, "16")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)SA_B_MONITOR PP")
}

record(subArray, "$(DEVICE)SA_B_MONITOR") {
	field(INP, "$(DEVICE)SA_ARRAY_MONITOR")
	field(INDX, "1")
	field(MALM, "16")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)SA_C_MONITOR PP")
}

record(subArray, "$(DEVICE)SA_C_MONITOR") {
	field(INP, "$(DEVICE)SA_ARRAY_MONITOR")
	field(INDX, "2")
	field(MALM, "16")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)SA_D_MONITOR PP")
}

record(subArray, "$(DEVICE)SA_D_MONITOR") {
	field(INP, "$(DEVICE)SA_ARRAY_MONITOR")
	field(INDX, "3")
	field(MALM, "16")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)SA_X_MONITOR PP")
}

record(subArray, "$(DEVICE)SA_X_MONITOR") {
	field(INP, "$(DEVICE)SA_ARRAY_MONITOR")
	field(INDX, "4")
	field(MALM, "16")
	field(NELM, "1")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)SA_Y_MONITOR PP")
}

record(subArray, "$(DEVICE)SA_Y_MONITOR") {
	field(INP, "$(DEVICE)SA_ARRAY_MONITOR")
	field(INDX, "5")
	field(MALM, "16")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)SA_Q_MONITOR PP")
}

record(subArray, "$(DEVICE)SA_Q_MONITOR") {
	field(INP, "$(DEVICE)SA_ARRAY_MONITOR")
	field(INDX, "6")
	field(MALM, "16")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)SA_SUM_MONITOR PP")
}

record(subArray, "$(DEVICE)SA_SUM_MONITOR") {
	field(INP, "$(DEVICE)SA_ARRAY_MONITOR")
	field(INDX, "7")
	field(MALM, "16")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)SA_CX_MONITOR PP")
}

record(subArray, "$(DEVICE)SA_CX_MONITOR") {
	field(INP, "$(DEVICE)SA_ARRAY_MONITOR")
	field(INDX, "8")
	field(MALM, "16")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)SA_CY_MONITOR PP")
}

record(subArray, "$(DEVICE)SA_CY_MONITOR") {
	field(INP, "$(DEVICE)SA_ARRAY_MONITOR")
	field(INDX, "9")
	field(MALM, "16")
	field(FTVL, "LONG")
	field(FLNK, "$(DEVICE)SA_FINISHED_MONITOR")
}

record(calc, "$(DEVICE)SA_FINISHED_MONITOR") {
	field(CALC, "A+1")
	field(INPA, "$(DEVICE)SA_FINISHED_MONITOR PP")
}

