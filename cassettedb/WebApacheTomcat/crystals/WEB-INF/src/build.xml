<project name="crystals" basedir="../" default="all">


    <!-- Local system paths -->
    <property environment="env"/>
    <property name="tomcat_base" value="${env.CATALINA_HOME}" />
    <property name="tomcat_lib" value="${tomcat_base}/common/lib" />
    <property name="distpath.project" value="classes"/>


    <!-- Project settings -->
    <property name="project.title" value="crystals"/>
    <property name="project.distname" value="crystals"/>
    <property name="project.version" value="4.3"/>


    <!-- classpath for building cts.jar -->
    <path id="cts.classpath">
        <pathelement path ="${tomcat_lib}/servlet-api.jar"/>
        <pathelement path ="lib/log4j-1.2.13.jar"/>
        <pathelement path ="lib/commons-logging.jar"/>
        <pathelement path ="lib/classes12.jar"/>
        <pathelement path ="lib/xml-apis.jar"/>
        <pathelement path ="lib/xercesImpl.jar"/>
        <pathelement path ="lib/xalan.jar"/>
        <pathelement path ="lib/commons-dbcp-1.2.1.jar"/>
        <pathelement path ="lib/commons-pool-1.2.jar"/>
        <pathelement path ="lib/commons-collections-3.1.jar"/>
    </path>

    <!-- classpath for junit test -->
    <path id="junit.classpath">
        <pathelement path ="lib/junit.jar"/>
		<pathelement path="lib/httpunit.jar"/>
        <pathelement path ="lib/strutstest-2.1.3.jar"/>
    </path>

    <!-- classpath for building sil packages -->
    <path id="compile.classpath">
        <pathelement path ="${tomcat_lib}/servlet-api.jar"/>
        <pathelement path ="lib/authUtility.jar"/>
        <pathelement path ="lib/cts.jar"/>
        <pathelement path ="lib/jxl.jar"/>
        <pathelement path ="lib/struts.jar"/>
        <pathelement path ="lib/xercesImpl.jar"/>
        <pathelement path ="lib/xml-apis.jar"/>
        <pathelement path ="lib/xalan.jar"/>
        <pathelement path ="lib/serializer.jar"/>
        <pathelement path ="classes"/>
    </path>

    <!-- Check timestamp on files -->
    <target name="prepare">
    	<echo message="java.home = ${java.home}"/>
   	<echo message="java.version = ${java.version}"/>
    	<echo message="ant.home = ${ant.home}"/>
    	<echo message="ant.version = ${ant.version}"/>
        <tstamp/>
    </target>

    <!-- Build cts classes -->
     <target name="build_cts">
        <javac srcdir="lib/cts" destdir="lib/cts">
            <classpath refid="cts.classpath"/>
        </javac>
	<chmod dir="lib/cts/" type="both" perm="ugo+rx" includes="**" />
    </target>

    <!-- Build cts.jar -->
     <target name="jar_cts" depends="build_cts">
        <jar basedir="lib/cts" destfile="lib/cts.jar" includes="cts/*.class"/>
		<chmod file="lib/cts.jar" perm="ugo+rx" />
    </target>

    <!-- Normal build of application -->
   <target name="compile" depends="prepare">
        <mkdir dir="classes" />
        <javac srcdir="src" includes="sil/**" destdir="classes">
            <classpath refid="compile.classpath"/>
        </javac>
		<chmod dir="classes" type="both" perm="ugo+rx" includes="**" />
    </target>

    <!-- Build junit test classes -->
   <target name="compile_test" depends="prepare,compile">
        <mkdir dir="classes" />
        <javac srcdir="src" includes="junit/**" destdir="classes">
            <classpath refid="compile.classpath"/>
            <classpath refid="junit.classpath"/>
		    <classpath>
			  <pathelement location="classes"/>
		    </classpath>
        </javac>
	<chmod dir="classes" type="both" perm="ugo+rx" includes="**" />
    </target>

    <!-- junit test for cts.jar -->
	<target name="test_cts" depends="build_cts,jar_cts, compile_test">
		<junit printsummary="on" 
			haltonfailure="on" 
			haltonerror="on"
			showoutput="on">
          <classpath refid="cts.classpath"/>
          <classpath refid="junit.classpath"/>
		    <classpath>
			  <pathelement location="lib/cts.jar"/>
			  <pathelement location="classes"/>
		    </classpath>

		  <formatter type="plain"/>

		  <test name="junit.cts.CassetteDBTest" todir="src"/>
		</junit>
	</target>

    <!-- junit test for cts.jar -->
	<target name="test_servlets" depends="compile,compile_test">
		<junit printsummary="yes" haltonfailure="yes" haltonerror="yes">
          <classpath refid="cts.classpath"/>
          <classpath refid="junit.classpath"/>
		    <classpath>
			  <pathelement location="lib/cts.jar"/>
			  <pathelement location="classes"/>
		    </classpath>

		  <formatter type="plain" usefile="false" />

		  <batchtest fork="no" todir="src">
			<fileset dir="classes">
			  <include name="junit/sil/servlets/Test*.class"/>
			</fileset>
		  </batchtest>
		</junit>
	</target>

	<target name="test" depends="test_cts, test_servlets">
		<echo message="junit tests"/>
	</target>




    <!-- Remove classes directory for clean build -->
    <target name="clean"
      description="Prepare for clean build">
      <delete dir="classes/sil" verbose="true" />
    </target>

	<!-- Compile jsp pages -->
	<target name="jspc">

		<taskdef classname="org.apache.jasper.JspC" name="jasper2" >
		  <classpath id="jspc.classpath">
			<pathelement location="${java.home}/../lib/tools.jar"/>
			<fileset dir="${tomcat.home}/server/lib">
			  <include name="*.jar"/>
			</fileset>
			<fileset dir="${tomcat.home}/common/lib">
			  <include name="*.jar"/>
			</fileset>
		  </classpath>
		</taskdef>

		<jasper2
				 validateXml="false"
				 uriroot="${webapp.path}"
				 webXmlFragment="${webapp.path}/WEB-INF/generated_web.xml"
				 outputDir="${webapp.path}/WEB-INF/src" />

	</target>

	<!-- Compile jsp pages -->
	<target name="compile_jsp">

		<mkdir dir="${webapp.path}/WEB-INF/classes"/>
		<mkdir dir="${webapp.path}/WEB-INF/lib"/>

		<javac destdir="${webapp.path}/WEB-INF/classes"
			   optimize="off"
			   debug="on" failonerror="false"
			   srcdir="${webapp.path}/WEB-INF/src"
		   excludes="**/*.smap">
		  <classpath>
			<pathelement location="${webapp.path}/WEB-INF/classes"/>
			<fileset dir="${webapp.path}/WEB-INF/lib">
			  <include name="*.jar"/>
			</fileset>
			<pathelement location="${tomcat.home}/common/classes"/>
			<fileset dir="${tomcat.home}/common/lib">
			  <include name="*.jar"/>
			</fileset>
			<pathelement location="${tomcat.home}/shared/classes"/>
			<fileset dir="${tomcat.home}/shared/lib">
			  <include name="*.jar"/>
			</fileset>
		  </classpath>
		  <include name="**" />
		  <exclude name="tags/**" />
		</javac>

	</target>


    <!-- Build project and create distribution-->
    <target name="all" depends="compile"/>

</project>
