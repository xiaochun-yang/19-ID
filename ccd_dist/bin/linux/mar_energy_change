#!/usr/bin/expect
#
# mar_energy_change
#
# usage: mar_energy_change command [arg ....]
#
# modified from Michael Blum's "motor_server_example.exp"
#
# This script is called by mar's control software to operate a motor
# (eg wavelength) or a pseudo-motor. This script interprets arguments
# to be passed by marccd and then transfer these parameters to external
# program which moves the motors.
# 

if {  $argc < 1 } {
	puts ""
   	puts "usage:  $argv0 command \[argument ...\]"
   	puts ""
   	puts "       commands:"
   	puts "               marccd_move_abs"
   	puts "               marccd_set_abs"
   	puts "               marccd_exposure"
   	puts "               marccd_shutter"
	puts ""
   	exit 1
}

if {  $argc == 1 } {

	#  All the arguments are in 1 string
	set arguments [ split [ lindex $argv 0 ] ]
   	set nargs [ expr [ llength $arguments ] - 1 ]
                                                                                                                      
} else {

	#  All the arguments are separate
	set arguments $argv
   	set nargs [expr $argc - 1]
}

set command [ lindex $arguments 0 ]

# ---------------------------------------------------
# Main Program --------------------------------------
# ---------------------------------------------------

switch -exact $command {
                                                                                                                      
	marccd_move_abs {
                                                                                                                      
   		if {  $nargs < 3 } {
                                                                                                                      
      			puts ""
      			puts "usage:  $argv0 $command axis position speed \[axis position speed ...\]"
      			puts ""
                                                                                                                      
   		} else {
                                                                                                                      
      			set axis [ lindex $arguments 1]
      			set position [ lindex $arguments 2]
      			set speed [ lindex $arguments 3]
                                
			send_tty "Yang the argument is $arguments"
      			switch -exact $axis {
                                                                                                                      
      				fake_axis {
         				send_tty "would do something appropriate to fake axis $axis..."
                                                                                                                      
         				# Check some external condition ?
         				sleep 1.0
         				send_tty " DONE.\n"
      				}
                                                                                                                      
      				energy {
        				#set timeout -1
        				spawn telnet
                                                                                                                      
        				expect "telnet> "
        				send "open 130.199.192.228 8059\r"
                                                                                                                      
        				expect ")."
        				send "$axis $position $speed\r" 

        				send_tty "Moving $axis to $position at speed $speed..."
                                                                                                                     
        				expect {
						"done"	{ send_tty " DONE.\n";puts "message=$expect_out(buffer)\n retrun=$expect_out(0,string)";exit}
						timeout	{ exp_continue }
					}
      				}
                                                                                                                      
      				default {
         				send_tty "would MOVE $axis to $position at speed $speed..."
         				sleep 1.0
         				send_tty " DONE.\n"
      				}
                          }
		}
	}

	marccd_set_abs {
                                                                                                                      
   		if {  $nargs <= 2 } {
                                                                                                                      
      			puts ""
      			puts "usage:  $argv0 $command axis position \[axis position ...\]"
      			puts ""
                                                                                                                      
   		} else {
                                                                                                                      
      			set axis [ lindex $arguments 1]
      			set position [ lindex $arguments 2]
                                                                                                                      
      			send_tty "SET $axis to $position.\n"
   		}
                                                                                                                      
	}
                                                                                                                      
	marccd_exposure {
                                                                                                                      
   		if {  $nargs != 4 } {
                                                                                                                      
      			puts ""
      			puts "usage:  $argv0 $command axis width time expose"
      			puts ""
                                                                                                                      
   		} else {
                                                                                                                      
      			set axis [ lindex $arguments 1]
      			set width [ lindex $arguments 2]
      			set time [ lindex $arguments 3]
      			set expose [ lindex $arguments 4]
                                                                                                                      
      			if {  $expose > 0 } {
         			send_tty "EXPOSE for $time seconds while scanning $axis by $width ..."
      			} else {
         			send_tty "INTEGRATE for $time seconds while scanning $axis by $width ..."
      		}
                                                                                                                      
      		sleep $time
		send_tty " DONE.\n"
		}
	}


	marccd_shutter {
                                                                                                                      
   		switch -exact [ lindex $arguments 1 ] {
   			open {
      				puts "SHUTTER OPEN"
   			}
   			close {
      				puts "SHUTTER CLOSE"
   			}
   			default {
      				puts ""
      				puts "usage:  $argv0 $command open | close"
      				puts ""
   			}
   		}
	}
                                                                                                                      
	default {
                                                                                                                      
   		puts ""
   		puts "usage:  $argv0 command \[argument ...\]"
   		puts ""
   		puts "        command is marccd_move_abs, marccd_set_abs, marccd_exposure, or marccd_shutter"
   		puts ""
                                                                                                                      
   		exit 1
                                                                                                                      
	}
}
                                                                                                                      
exit 0
