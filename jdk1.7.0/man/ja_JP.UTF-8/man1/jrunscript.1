." Copyright (c) 2006, 2011, Oracle and/or its affiliates. All rights reserved.
." ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
."
."
."
."
."
."
."
."
."
."
."
."
."
."
."
."
."
."
."
.TH jrunscript 1 "07 May 2011"

.LP
.SH "名前"
jrunscript \- コマンド行スクリプトシェル
.LP
.RS 3
.TP 2
o
形式 
.TP 2
o
パラメータ 
.TP 2
o
説明 
.TP 2
o
オプション 
.TP 2
o
引数 
.TP 2
o
例 
.TP 2
o
関連項目 
.RE

.LP
.SH "形式"
.LP
.nf
\f3
.fl
\fP\f3jrunscript\fP [ \f2options\fP ] [ arguments... ]
.fl
.fi

.LP
.SH "パラメータ"
.LP
.RS 3
.TP 3
options 
オプションを使用する場合、コマンド名の直後に記述してください。 
.TP 3
arguments 
引数を使用する場合、オプションまたはコマンド名の直後に記述してください。 
.RE

.LP
.SH " 説明"
.LP
.LP
\f3jrunscript\fP はコマンド行スクリプトシェルです。jrunscript は、対話型 (読み取り \- 評価 \- 出力) モードとバッチ (\-f オプション) モードの両方のスクリプト実行をサポートします。これはスクリプト言語に依存しないシェルです。デフォルトの使用言語は JavaScript ですが、\-l オプションを使えばほかの言語も指定できます。jrunscript は、Java とスクリプト言語との通信によって「探求的なプログラミング」スタイルをサポートします。
.LP
.LP
\f3注:\fP このツールは\f3試験的なもの\fPであり、将来の JDK のバージョンでは\f3利用できなくなる\fP可能性があります。
.LP
.SH "オプション"
.LP
.RS 3
.TP 3
\-classpath path 
スクリプトからのアクセス対象となるユーザーの .class ファイルの検索場所を指定します。 
.TP 3
\-cp path 
\-classpath \f2path\fP と同義です。 
.TP 3
\-Dname=value 
Java のシステムプロパティーを設定します。 
.TP 3
\-J<flag> 
jrunscript が実行されている Java 仮想マシンに <flag> を渡します。 
.TP 3
\-l language 
指定されたスクリプト言語を使用します。デフォルトでは JavaScript が使用されます。ほかのスクリプト言語を使用するには、対応するスクリプトエンジンの JAR ファイルも指定する必要があります。それには、\-cp、\-classpath のいずれかのオプションを使用します。 
.TP 3
\-e script 
指定されたスクリプトを評価します。このオプションを使えば、コマンド行にすべてが指定された「1 行」スクリプトを実行できます。 
.TP 3
\-encoding encoding 
スクリプトファイルの読み取り時に使用する文字エンコーディングを指定します。 
.TP 3
\-f script\-file 
指定されたスクリプトファイルを評価します (バッチモード)。 
.TP 3
\-f \- 
標準入力からスクリプトを読み取り、それを評価します (対話型モード)。 
.TP 3
\-help\  
ヘルプメッセージを出力して終了します。 
.TP 3
\-?\  
ヘルプメッセージを出力して終了します。 
.TP 3
\-q\  
利用可能なすべてのスクリプトエンジンを一覧表示したあと、終了します。 
.RE

.LP
.SH "引数"
.LP
.LP
[arguments...] が存在していて、かつ \f3\-e\fP、\f3\-f\fP のいずれのオプションも使用されなかった場合、最初の引数がスクリプトファイルとなり、他の引数が存在する場合はスクリプト引数として渡されます。[arguments..] と、\f3\-e\fP または \f3\-f\fP が使用されている場合、すべての [arguments..] がスクリプト引数として渡されます。[arguments..]、\f3\-e\fP、\f3\-f\fP がどれも存在しなかった場合は、対話型モードが使用されます。スクリプトからスクリプト引数を使用するには、「arguments」という名前の String 配列型のエンジン変数を使用します。
.LP
.SH "例"
.LP
.SS 
インラインスクリプトの実行
.LP
.nf
\f3
.fl
jrunscript \-e "print('hello world')"
.fl
jrunscript \-e "cat('http://java.sun.com')"
.fl
\fP
.fi

.LP
.SS 
指定された言語を使用し、指定されたスクリプトファイルを評価する
.LP
.nf
\f3
.fl
jrunscript \-l js \-f test.js
.fl
\fP
.fi

.LP
.SS 
対話型モード
.LP
.nf
\f3
.fl
jrunscript
.fl
js> print('Hello World\\n');
.fl
Hello World
.fl
js> 34 + 55
.fl
89.0
.fl
js> t = new java.lang.Thread(function() { print('Hello World\\n'); })
.fl
Thread[Thread\-0,5,main]
.fl
js> t.start()
.fl
js> Hello World
.fl

.fl
js>
.fl
\fP
.fi

.LP
.SS 
スクリプト引数を指定してスクリプトファイルを実行する
.LP
.nf
\f3
.fl
jrunscript test.js arg1 arg2 arg3
.fl
\fP
.fi

.LP
test.js が実行対象となるスクリプトファイルであり、arg1、arg2、および arg3 はスクリプト引数としてスクリプトに渡されます。スクリプトは「arguments」配列を使ってこれらにアクセスできます。 
.SH "関連項目"
.LP
.LP
JavaScript が使用される場合、jrunscript は、最初のユーザー定義スクリプトを評価する前に、いくつかの組み込み関数や組み込みオブジェクトを初期化します。これらの JavaScript 組み込み機能については、jsdocs を参照してください。
.LP
 
